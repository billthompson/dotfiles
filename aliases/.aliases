
#######################################
# Arc Aliases
#######################################

# Arc Diff Current
alias adc="arc list | awk '$1 ~ /\*/' | sed -E 's/Accepted|Needs Review//gi' | awk '{ print $3 }' | tr -d ':'"

#######################################
# Bundler Aliases
#######################################
alias bx="bundle exec"
alias bxr="bundle exec rake"
alias bxc="bundle exec rails c"

#######################################
# Docker Aliases
#######################################
alias dc="docker-compose"
alias dm="docker-machine"
# Stop all containers
alias dsa="docker stop \$(docker ps -a -q)"
# List all exited containers
alias dle="docker ps -aq -f status=exited"
# Remove stopped containers
alias drs="docker ps -aq --no-trunc -f status=exited | xargs docker rm"
# Remove dangling containers
alias drd="docker images -q --filter dangling=true | xargs docker rmi"

#######################################
# Git Aliases
#######################################
alias gl='git log --graph --pretty=format:'\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit'
alias gcmsg="git commit -m"
alias glb="script -q /dev/null git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' < /dev/null | head"
alias grbic='GIT_EDITOR="code --wait" grbi'

#######################################
# Kubernetes
# https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/
#######################################
alias k="kubectl"
# complete -F __start_kubectl k

alias ls="ls --color=always"
alias ll="ls -la"

alias mux="tmuxinator"
alias nvim="nvim +Neotree"

alias weather="curl http://wttr.in/leander"

#######################################
# Functions
#######################################

# Set the kubectl context.
function k_context() {
  local ctx_pre="gke_bc-cloud-vm-infra-"
  local ctx_post="_us-central1-f_cloud-vm-infrastructure"
  kubectl config use-context "${ctx_pre}${1}${ctx_post}"
}


# What is listening on the given ports.
function listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}

