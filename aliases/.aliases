#######################################
# Arc Aliases
#######################################

# Arc Diff Current
# List the diffs, find the one marked as current (*), remove columns that cause
# space parsing issues, grab the column with the diff ("D1234:"),
# remove the trailing ":", remove color codes.
alias adc="arc list | awk '\$1 ~ /\*/' | sed -E 's/Accepted|Needs Review|Changes Planned//gi' | awk '{ print \$3 }' | tr -d ':' | sed -r 's/[[:cntrl:]]\[[0-9]{1,3}m//g'"

#######################################
# Bundler Aliases
#######################################
alias bx="bundle exec"
alias bxr="bundle exec rake"
alias bxc="bundle exec rails c"

#######################################
# Docker Aliases
#######################################
alias dc="docker-compose"
alias dm="docker-machine"
# Stop all containers
alias dsa="docker stop \$(docker ps -a -q)"
# List all exited containers
alias dle="docker ps -aq -f status=exited"
# Remove stopped containers
alias drs="docker ps -aq --no-trunc -f status=exited | xargs docker rm"
# Remove dangling containers
alias drd="docker images -q --filter dangling=true | xargs docker rmi"

#######################################
# Git Aliases
#######################################
alias gl='git log --graph --pretty=format:'\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit'
alias gcmsg="git commit -m"
alias glb="git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | head"
alias grbic='GIT_EDITOR="code --wait" grbi'

#######################################
# Kubernetes
# https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/
#######################################
alias k="kubectl"
# complete -F __start_kubectl k

##
# Process Kill Listening
#
# Kill processes listening on the given port.
#
# Usage:
#   pkl 5000
#
# @param $1 port
#
function pkl() {
  local port=$1
  listening "$port" | awk '{ print $2 }' | xargs -i% kill -9 %
}

alias ls="ls --color=always"
alias ll="ls -la"

alias mux="tmuxinator"
alias nvim="nvim +Neotree"

alias weather="curl http://wttr.in/leander"

#######################################
# Functions
#######################################

# Set the kubectl context.
function k_context() {
  local ctx_pre="gke_bc-cloud-vm-infra-"
  local ctx_post="_us-central1-f_cloud-vm-infrastructure"
  kubectl config use-context "${ctx_pre}${1}${ctx_post}"
}


# What is listening on the given ports.
function listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}

# Execute a command verbosely.
# Will execute the command while capturing its stdout/stderr
# in a tmp file as well as its timing info.
function cmdv() {
  # CMD="$@"
  HOST=$(hostname | cut -d '.' -f1)
  INVOKE_TS=$(date +"%Y%m%d-%H%M%S")
  OUTFILE="/tmp/$HOST-$(echo "$@" | sed -e 's/[^A-Za-z0-9._-]/_/g')-$INVOKE_TS.txt"
  echo -e "Output is being saved to: $OUTFILE\n"

  { time "$@" 2>&1 | tee -a "$OUTFILE";  } 2>>"$OUTFILE"

  DONE_TS=$(date +"%Y%m%d-%H%M%S")
  time_data="\nStarted:   ${INVOKE_TS}\nCompleted: ${DONE_TS}"
  echo -e "$time_data" | tee -a "$OUTFILE"
  echo "Output saved to: $OUTFILE"
}

##
# Build a filename with the current timestmap.
#
# $filename test log
# $ => test-20240529T1348.log
#
function filename() {
  local base="$1"
  local ext="$2"
  timestamp="$(date +%Y%m%dT%H%M)"
  echo "${base}-${timestamp}.${ext}"
}

##
# Select a random reviewer from the Logistics team.
#
function ep_logistiscs_reviewer() {
  ruby -e "puts %i[asher jake lawrence gomez kostick vegas].sample"
}

